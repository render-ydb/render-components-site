name: Deploy components dosc site with PM2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWD }}
          script: |
            # 创建目标部署目录（如果不存在）
            mkdir -p /apps/render-components-site

      - name: Install dependencies and compile project
        run: |
          npm ci --force
          npm run build
      - name: Build deployment package (excluding node_modules and other directories)
        run: |
          tar -cvf components.tar \
          --exclude='tsconfig.json' \
          --exclude='node_modules' .
          gzip components.tar

      - name: Upload deployment package
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWD }}
          source: components.tar.gz
          target: /apps/render-components-site

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWD }}
          script: |
            # 创建目标部署目录（如果不存在）
            mkdir -p /apps/render-components-site

            # 切换到部署目录
            cd /apps/render-components-site

            # 清理当前目录下所有文件及子目录
            rm -rf ./*

            # 解压新部署包
            tar -xzvf components.tar.gz

            # 清理临时文件（此时已无须单独删除旧版本文件）
            rm components.tar.gz

            # 启动新的服务
            pm2 list | grep 'your_app_name' && pm2 stop your_app_name || echo "No existing service found"
            pm2 start npm --name your_app_name -- run serve
